name: "check-requirements"
on:
  workflow_dispatch:
    inputs:
      python-version:
        type: "string"
        required: false
        description: "Python version"
        default: "3.13"
      node-version:
        type: "string"
        required: false
        description: "Node.js version"
        default: "22.14"
      uv-version:
        type: "string"
        required: false
        description: "uv version"
        default: "0.6.12"
      ubuntu-version:
        type: "string"
        required: false
        description: "Ubuntu version"
        default: "ubuntu-24.04"
  workflow_call:
    inputs:
      python-version:
        type: "string"
        required: false
        description: "Python version"
        default: "3.13"
      node-version:
        type: "string"
        required: false
        description: "Node.js version"
        default: "22.14"
      uv-version:
        type: "string"
        required: false
        description: "uv version"
        default: "0.6.12"
      ubuntu-version:
        type: "string"
        required: false
        description: "Ubuntu version"
        default: "ubuntu-24.04"
env:
  ENVIRONMENT: "dev"
  VIRTUAL_ENV: "~/.venv"
jobs:
  check-requirements:
    name: "check-requirements"
    runs-on: "${{ inputs.ubuntu-version }}"
    steps:
      - name: "Prepend custom path"
        id: "prepend-custom-path"
        run: "echo \"${{ env.VIRTUAL_ENV }}\" >> $GITHUB_PATH"
      - name: "Git clone"
        id: "git-clone"
        uses: "actions/checkout@v4.1.7"
      - name: "Set up Python ${{ inputs.python-version }}"
        id: "set-up-python"
        uses: "actions/setup-python@v5.5.0"
        with:
          python-version: "${{ inputs.python-version }}"
      - name: "Set up Node.js ${{ inputs.node-version }}"
        id: "set-up-node"
        uses: "actions/setup-node@v4.3.0"
        with:
          node-version: "${{ inputs.node-version }}"
      - name: "Set up uv ${{ inputs.uv-version }}"
        id: "set-up-uv"
        uses: "astral-sh/setup-uv@v5.4.1"
        with:
          version: "${{ inputs.uv-version }}"
      - name: "Configuring uv cache"
        id: "configure-uv-cache"
        uses: "actions/cache@v4.2.3"
        with:
          path: |
            "${{ env.UV_CACHE_DIR }}"
            "${{ env.VIRTUAL_ENV }}"
          key: "${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}"
          restore-keys: |
            "${{ runner.os }}-uv-"
      - name: "Configuring npm cache"
        id: "configure-npm-cache"
        uses: "actions/cache@v4.2.3"
        with:
          path: "~/.npm"
          key: "${{ runner.os }}-npm-${{ hashFiles('package.json') }}"
          restore-keys: |
            "${{ runner.os }}-npm-"
      - name: "Install Python requirements"
        id: "install-python-requirements"
        run: |
          "uv venv ${{ env.VIRTUAL_ENV }}"
          "make install-python-requirements ENVIRONMENT=${{ env.ENVIRONMENT }}"
      - name: "Install JavaScript requirements"
        id: "install-js-requirements"
        run: "make install-js-requirements ENVIRONMENT=${{ env.ENVIRONMENT }}"
      - name: "Check Python outdated requirements"
        id: "check-python-outdated-requirements"
        continue-on-error: true
        run: "make check-python-requirements"
      - name: "Check JavaScript outdated requirements"
        id: "check-js-outdated-requirements"
        continue-on-error: true
        run: "make check-js-requirements"
