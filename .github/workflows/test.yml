name: "test"
on:
  workflow_dispatch:
    inputs:
      python-version:
        type: "string"
        required: false
        description: "Python version"
        default: "3.13"
      node-version:
        type: "string"
        required: false
        description: "Node.js version"
        default: "22.14"
      uv-version:
        type: "string"
        required: false
        description: "uv version"
        default: "0.6.16"
      ubuntu-version:
        type: "string"
        required: false
        description: "Ubuntu version"
        default: "ubuntu-24.04"
  workflow_call:
    inputs:
      python-version:
        type: "string"
        required: false
        description: "Python version"
        default: "3.13"
      node-version:
        type: "string"
        required: false
        description: "Node.js version"
        default: "22.14"
      uv-version:
        type: "string"
        required: false
        description: "uv version"
        default: "0.6.16"
      ubuntu-version:
        type: "string"
        required: false
        description: "Ubuntu version"
        default: "ubuntu-24.04"
env:
  NAME: "resume"
  ENVIRONMENT: "dev"
  VIRTUAL_ENV: "${{ github.workspace }}/.venv"
jobs:
  test:
    name: "test"
    runs-on: "${{ inputs.ubuntu-version }}"
    steps:
      - name: "Git clone"
        id: "git-clone"
        uses: "actions/checkout@v4.1.7"
      - name: "Prepend custom path"
        id: "prepend-custom-path"
        run: "echo \"PATH=${{ env.VIRTUAL_ENV }}/bin:${{ env.NODE_MODULES_PATH }}/.bin:\"${PATH}\"\" >> \"${GITHUB_ENV}\""
      - name: "Set up Python ${{ inputs.python-version }}"
        id: "set-up-python"
        uses: "actions/setup-python@v5.5.0"
        with:
          python-version: "${{ inputs.python-version }}"
      - name: "Set up uv ${{ inputs.uv-version }}"
        id: "set-up-uv"
        uses: "astral-sh/setup-uv@v5.4.1"
        with:
          version: "${{ inputs.uv-version }}"
          cache-local-path: "~/.cache/uv"
      - name: "Create Python virtual environment"
        id: "create-python-virtual-environment"
        run: "uv venv ${{ env.VIRTUAL_ENV }} --relocatable"
      - name: "Configuring uv cache"
        id: "configure-uv-cache"
        uses: "actions/cache@v4.2.3"
        with:
          path: |
            "~/.cache/uv"
            "${{ env.VIRTUAL_ENV }}"
          key: "${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}"
          restore-keys: |
            "${{ runner.os }}-uv-"
      - name: "Temporarily save coverage statistics"
        id: "temporarily-save-coverage-statistics"
        uses: "actions/cache@v4.2.3"
        with:
          path: ".coverage"
          key: ".coverage-${{ github.run_id }}-${{ github.run_number }}"
      - name: "Install Python requirements"
        id: "install-python-requirements"
        run: "make install-python-requirements ENVIRONMENT=${{ env.ENVIRONMENT }}"
      - name: "Run tests"
        id: "run-tests"
        run: "make test"
